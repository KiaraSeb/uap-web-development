---
interface Props {
  id: string;
  content: string;
  completed: boolean;
}

const { id, content, completed } = Astro.props as Props;
---

<tarea-item data-id={id} data-content={content} data-completed={completed.toString()}>
  <div class="tarea">
    <input 
      type="checkbox" 
      data-id={id}
      checked={completed}
      onchange="toggleTarea(this)"
    />
    <span style={completed ? "text-decoration: line-through;" : ""}>{content}</span>
    <button class="basura" data-id={id} onclick="eliminarTarea(this)">üóëÔ∏è</button>
  </div>
</tarea-item>

<script>
  export class TareaItem extends HTMLElement {
    setId(id: string) {
      this.setAttribute("data-id", id);
      const input = this.querySelector("input");
      const button = this.querySelector("button");
      if (input) input.setAttribute("data-id", id);
      if (button) button.setAttribute("data-id", id);
    }

    setContent(content: string) {
      const span = this.querySelector("span");
      if (span) span.textContent = content;
    }

    setCompleted(completed: boolean) {
      this.setAttribute("data-completed", completed.toString());
      const input = this.querySelector("input");
      const span = this.querySelector("span");
      if (input) input.checked = completed;
      if (span) span.style.textDecoration = completed ? "line-through" : "";
    }
  }

  customElements.define("tarea-item", TareaItem);
</script>